- name: Install mysql
  ansible.builtin.apt:
    name: 
      - mysql-server
      - python3-pymysql
    state: present

- name: Create override.cnf
  template:
    src: override.cnf.j2
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify: 
    -   Restart mysql

- name: Ensure mysql is running
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: true

- name: Create MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica

- name: Create MySQL user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: my cnf template
  ansible.builtin.template:
    src: .my.cnf.j2
    dest: /var/lib/prometheus/.my.cnf
    owner: prometheus
    group: prometheus
  no_log: true
  notify: Restart mysql exporter

- name: MySQL exporter
  ansible.builtin.apt:
    name: prometheus-mysqld-exporter
    state: present

- name: MySQL exporter user
  community.mysql.mysql_user:
    name: "{{ exporter_user }}"
    password: "{{ exporter_password }}"
    priv: "*.*:PROCESS,REPLICATION CLIENT,SELECT"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: mysql exporter running
  ansible.builtin.service:
    name: prometheus-mysqld-exporter
    state: started
    enabled: true

- name: Ensure that mysql directory exists 
  file:
    path: /home/backup/mysql
    state: directory 
    owner: backup 
    group: backup 
    mode: 0755

- name: Create MySQL user backup 
  mysql_user:
    name: backup
    password: "{{ mysql_backup_user_password }}" 
    priv: "agama.*:LOCK TABLES,SELECT"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Ensure /home/backup/.my.cnf file is created
  template:
    src: backup_my.cnf.j2
    dest: /home/backup/.my.cnf
    owner: backup
    group: backup
    mode: 0600
  no_log: true

- name: Schedule backups
  template:
    src: mysql_backup_cron.j2
    dest: /etc/cron.d/mysql-backup
    owner: root
    group: root
  notify: Reload cron

- name: Ensure cron is running
  ansible.builtin.service:
    name: cron
    state: started
    enabled: true

- name: Add replication user
  community.mysql.mysql_user:
    name: "{{ mysql_replication_user }}"
    password: "{{ mysql_replication_password }}"
    host: "%"
    priv: "*.*:REPLICATION SLAVE"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Set  MySQL read-only mode
  community.mysql.mysql_variables:
    variable: read_only
    value: "{{ 'OFF' if inventory_hostname == mysql_host else 'ON' }}"
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica

- name: Set MySQL CNAMES
  community.general.nsupdate:
    key_algorithm: "hmac-sha256"
    key_name: "nsupdatekey"
    key_secret: "{{ nsupdate_key }}"
    record: "db{{inventory_hostname | replace('olegas2006','')}}"
    server: "{{hostvars[groups['dns_primary'][0]]['ansible_default_ipv4']['address']}}"
    state: present
    type: CNAME
    zone: "{{ startup_name }}"
    value: "{{ inventory_hostname }}"
  no_log: true
